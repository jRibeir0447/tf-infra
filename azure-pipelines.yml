# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: 'Default'

stages:
- stage: acc
  displayName: 'Account login'
  jobs:
    - job: acclogin
      displayName: 'Account login'
      steps:
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'az_pipelines'
          scriptType: 'ps'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az account show

- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '1.5.7'
    
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'az_pipelines'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az account show
          terraform --version
          terraform init -backend-config="storage_account_name=$(storageAccountName)" -backend-config="container_name=$(containerName)" -backend-config="key=$(key)" -backend-config="access_key=$(accessKey)"
          terraform plan -out=tfplan

- stage: Deploy
  displayName: 'Terraform Apply'
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'

    - script: |
        terraform --version
        terraform init -backend-config="storage_account_name=$(storageAccountName)" -backend-config="container_name=$(containerName)" -backend-config="key=$(key)" -backend-config="access_key=$(accessKey)"
        terraform apply -auto-approve tfplan
      displayName: 'Terraform Init and Apply'